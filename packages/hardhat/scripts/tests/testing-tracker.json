{
  "metadata": {
    "version": "1.0.0",
    "lastUpdated": "2025-09-02T20:20:05.008Z",
    "description": "Comprehensive testing tracker for SovereignSeas V5 modules and functions - Fresh Start",
    "totalModules": 6,
    "totalFunctions": 60
  },
  "modules": {
    "sovereignSeasV5": {
      "name": "SovereignSeasV5",
      "description": "Main proxy contract with module management",
      "status": "not_tested",
      "functions": {
        "callModule": {
          "status": "not_tested",
          "testCases": [],
          "lastTested": "",
          "coverage": 0
        },
        "delegateToModule": {
          "status": "not_tested",
          "testCases": [],
          "lastTested": "",
          "coverage": 0
        },
        "staticCallModule": {
          "status": "not_tested",
          "testCases": [],
          "lastTested": "",
          "coverage": 0
        },
        "registerModule": {
          "status": "not_tested",
          "testCases": [],
          "lastTested": "",
          "coverage": 0
        },
        "unregisterModule": {
          "status": "not_tested",
          "testCases": [],
          "lastTested": "",
          "coverage": 0
        },
        "updateModuleAddress": {
          "status": "not_tested",
          "testCases": [],
          "lastTested": "",
          "coverage": 0
        },
        "getModuleAddress": {
          "status": "not_tested",
          "testCases": [],
          "lastTested": "",
          "coverage": 0
        },
        "isModuleRegistered": {
          "status": "not_tested",
          "testCases": [],
          "lastTested": "",
          "coverage": 0
        },
        "getRegisteredModules": {
          "status": "not_tested",
          "testCases": [],
          "lastTested": "",
          "coverage": 0
        },
        "getModuleDependencies": {
          "status": "not_tested",
          "testCases": [],
          "lastTested": "",
          "coverage": 0
        },
        "isPaused": {
          "status": "not_tested",
          "testCases": [],
          "lastTested": "",
          "coverage": 0
        },
        "pauseSystem": {
          "status": "not_tested",
          "testCases": [],
          "lastTested": "",
          "coverage": 0
        },
        "unpauseSystem": {
          "status": "not_tested",
          "testCases": [],
          "lastTested": "",
          "coverage": 0
        },
        "setModuleActive": {
          "status": "not_tested",
          "testCases": [],
          "lastTested": "",
          "coverage": 0
        }
      },
      "coverage": 0,
      "lastTested": ""
    },
    "projects": {
      "name": "ProjectsModule",
      "description": "Project management and metadata handling",
      "status": "partial",
      "functions": {
        "createProject": {
          "status": "passed",
          "testCases": [
            {
              "name": "Create project for wallet 1",
              "description": "Create project \"Ocean Cleanup Initiative\" using wallet 1",
              "status": "passed",
              "executionTime": 3835,
              "timestamp": "2025-09-02T18:44:04.555Z",
              "gasUsed": 1385669
            },
            {
              "name": "Create project for wallet 2",
              "description": "Create project \"Solar Community Grid\" using wallet 2",
              "status": "passed",
              "executionTime": 4687,
              "timestamp": "2025-09-02T18:44:09.526Z",
              "gasUsed": 1220866
            },
            {
              "name": "Create project for wallet 3",
              "description": "Create project \"Digital Education Platform\" using wallet 3",
              "status": "passed",
              "executionTime": 7442,
              "timestamp": "2025-09-02T18:44:15.392Z",
              "gasUsed": 1288585
            },
            {
              "name": "Create project for wallet 4",
              "description": "Create project \"Sustainable Farming Hub\" using wallet 4",
              "status": "passed",
              "executionTime": 3685,
              "timestamp": "2025-09-02T18:44:23.922Z",
              "gasUsed": 1220986
            },
            {
              "name": "Create project for wallet 5",
              "description": "Create project \"Medical Research DAO\" using wallet 5",
              "status": "passed",
              "executionTime": 5071,
              "timestamp": "2025-09-02T18:44:28.817Z",
              "gasUsed": 1243538
            },
            {
              "name": "Create project for wallet 6",
              "description": "Create project \"Climate Data Analytics\" using wallet 6",
              "status": "passed",
              "executionTime": 5020,
              "timestamp": "2025-09-02T18:44:35.095Z",
              "gasUsed": 1220950
            },
            {
              "name": "Create project for wallet 1",
              "description": "Create project \"Ocean Cleanup Initiative\" using wallet 1",
              "status": "passed",
              "executionTime": 4491,
              "timestamp": "2025-09-02T18:50:47.597Z",
              "gasUsed": 1248869
            },
            {
              "name": "Create project for wallet 2",
              "description": "Create project \"Solar Community Grid\" using wallet 2",
              "status": "passed",
              "executionTime": 4504,
              "timestamp": "2025-09-02T18:50:53.161Z",
              "gasUsed": 1203766
            },
            {
              "name": "Create project for wallet 3",
              "description": "Create project \"Digital Education Platform\" using wallet 3",
              "status": "passed",
              "executionTime": 4536,
              "timestamp": "2025-09-02T18:50:58.754Z",
              "gasUsed": 1271485
            },
            {
              "name": "Create project for wallet 4",
              "description": "Create project \"Sustainable Farming Hub\" using wallet 4",
              "status": "passed",
              "executionTime": 4457,
              "timestamp": "2025-09-02T18:51:04.373Z",
              "gasUsed": 1203886
            },
            {
              "name": "Create project for wallet 5",
              "description": "Create project \"Medical Research DAO\" using wallet 5",
              "status": "passed",
              "executionTime": 7072,
              "timestamp": "2025-09-02T18:51:09.900Z",
              "gasUsed": 1226438
            },
            {
              "name": "Create project for wallet 6",
              "description": "Create project \"Climate Data Analytics\" using wallet 6",
              "status": "passed",
              "executionTime": 4539,
              "timestamp": "2025-09-02T18:51:18.054Z",
              "gasUsed": 1203850
            },
            {
              "name": "Create project for wallet 1",
              "description": "Create project \"Ocean Cleanup Initiative\" using wallet 1",
              "status": "passed",
              "executionTime": 4543,
              "timestamp": "2025-09-02T19:49:12.148Z",
              "gasUsed": 1386720
            },
            {
              "name": "Create project for wallet 2",
              "description": "Create project \"Solar Community Grid\" using wallet 2",
              "status": "passed",
              "executionTime": 4593,
              "timestamp": "2025-09-02T19:49:18.079Z",
              "gasUsed": 1239017
            },
            {
              "name": "Create project for wallet 3",
              "description": "Create project \"Digital Education Platform\" using wallet 3",
              "status": "passed",
              "executionTime": 4537,
              "timestamp": "2025-09-02T19:49:24.065Z",
              "gasUsed": 1306736
            },
            {
              "name": "Create project for wallet 4",
              "description": "Create project \"Sustainable Farming Hub\" using wallet 4",
              "status": "passed",
              "executionTime": 9851,
              "timestamp": "2025-09-02T19:49:29.994Z",
              "gasUsed": 1239137
            },
            {
              "name": "Create project for wallet 5",
              "description": "Create project \"Medical Research DAO\" using wallet 5",
              "status": "passed",
              "executionTime": 4504,
              "timestamp": "2025-09-02T19:49:41.274Z",
              "gasUsed": 1261689
            },
            {
              "name": "Create project for wallet 6",
              "description": "Create project \"Climate Data Analytics\" using wallet 6",
              "status": "passed",
              "executionTime": 4504,
              "timestamp": "2025-09-02T19:49:47.174Z",
              "gasUsed": 1239101
            },
            {
              "name": "Create project for wallet 1",
              "description": "Create project \"Ocean Cleanup Initiative\" using wallet 1",
              "status": "passed",
              "executionTime": 4827,
              "timestamp": "2025-09-02T20:18:51.448Z",
              "gasUsed": 1386720
            },
            {
              "name": "Create project for wallet 2",
              "description": "Create project \"Solar Community Grid\" using wallet 2",
              "status": "passed",
              "executionTime": 5359,
              "timestamp": "2025-09-02T20:18:57.736Z",
              "gasUsed": 1239017
            },
            {
              "name": "Create project for wallet 3",
              "description": "Create project \"Digital Education Platform\" using wallet 3",
              "status": "passed",
              "executionTime": 4593,
              "timestamp": "2025-09-02T20:19:04.500Z",
              "gasUsed": 1306736
            },
            {
              "name": "Create project for wallet 4",
              "description": "Create project \"Sustainable Farming Hub\" using wallet 4",
              "status": "passed",
              "executionTime": 3712,
              "timestamp": "2025-09-02T20:19:10.560Z",
              "gasUsed": 1239137
            },
            {
              "name": "Create project for wallet 5",
              "description": "Create project \"Medical Research DAO\" using wallet 5",
              "status": "passed",
              "executionTime": 4911,
              "timestamp": "2025-09-02T20:19:15.956Z",
              "gasUsed": 1261689
            },
            {
              "name": "Create project for wallet 6",
              "description": "Create project \"Climate Data Analytics\" using wallet 6",
              "status": "passed",
              "executionTime": 6824,
              "timestamp": "2025-09-02T20:19:22.436Z",
              "gasUsed": 1239101
            }
          ],
          "lastTested": "2025-09-02T20:19:30.393Z",
          "coverage": 0
        },
        "updateProject": {
          "status": "not_tested",
          "testCases": [],
          "lastTested": "",
          "coverage": 0
        },
        "transferProjectOwnership": {
          "status": "not_tested",
          "testCases": [],
          "lastTested": "",
          "coverage": 0
        },
        "setProjectStatus": {
          "status": "not_tested",
          "testCases": [],
          "lastTested": "",
          "coverage": 0
        },
        "getProject": {
          "status": "not_tested",
          "testCases": [],
          "lastTested": "",
          "coverage": 0
        },
        "getProjectCount": {
          "status": "not_tested",
          "testCases": [],
          "lastTested": "",
          "coverage": 0
        },
        "getProjectsByOwner": {
          "status": "not_tested",
          "testCases": [],
          "lastTested": "",
          "coverage": 0
        },
        "getProjectsByCategory": {
          "status": "not_tested",
          "testCases": [],
          "lastTested": "",
          "coverage": 0
        },
        "getProjectsByTag": {
          "status": "not_tested",
          "testCases": [],
          "lastTested": "",
          "coverage": 0
        },
        "addProjectToCampaign": {
          "status": "not_tested",
          "testCases": [],
          "lastTested": "",
          "coverage": 0
        },
        "removeProjectFromCampaign": {
          "status": "not_tested",
          "testCases": [],
          "lastTested": "",
          "coverage": 0
        }
      },
      "coverage": 9,
      "lastTested": "2025-09-02T20:19:30.393Z"
    },
    "campaigns": {
      "name": "CampaignsModule",
      "description": "Campaign creation and management",
      "status": "failed",
      "functions": {
        "createCampaign": {
          "status": "not_tested",
          "testCases": [],
          "lastTested": "",
          "coverage": 0
        },
        "updateCampaign": {
          "status": "not_tested",
          "testCases": [],
          "lastTested": "",
          "coverage": 0
        },
        "startCampaign": {
          "status": "not_tested",
          "testCases": [],
          "lastTested": "",
          "coverage": 0
        },
        "pauseCampaign": {
          "status": "not_tested",
          "testCases": [],
          "lastTested": "",
          "coverage": 0
        },
        "completeCampaign": {
          "status": "not_tested",
          "testCases": [],
          "lastTested": "",
          "coverage": 0
        },
        "cancelCampaign": {
          "status": "not_tested",
          "testCases": [],
          "lastTested": "",
          "coverage": 0
        },
        "getCampaign": {
          "status": "not_tested",
          "testCases": [],
          "lastTested": "",
          "coverage": 0
        },
        "getCampaignCount": {
          "status": "not_tested",
          "testCases": [],
          "lastTested": "",
          "coverage": 0
        },
        "setCampaignAdmin": {
          "status": "not_tested",
          "testCases": [],
          "lastTested": "",
          "coverage": 0
        },
        "setCampaignFee": {
          "status": "not_tested",
          "testCases": [],
          "lastTested": "",
          "coverage": 0
        },
        "createERC20Campaign": {
          "status": "partial",
          "testCases": [
            {
              "name": "Create CELO campaign",
              "description": "Create normal CELO-based campaign with project addition fees",
              "status": "passed",
              "executionTime": 3980,
              "timestamp": "2025-09-02T18:44:41.147Z",
              "gasUsed": 1722662
            },
            {
              "name": "Create SEAS campaign",
              "description": "Create SEAS token-based campaign using createERC20Campaign",
              "status": "passed",
              "executionTime": 3906,
              "timestamp": "2025-09-02T18:44:45.138Z",
              "gasUsed": 1600114
            },
            {
              "name": "Create CELO campaign",
              "description": "Create normal CELO-based campaign with project addition fees",
              "status": "passed",
              "executionTime": 3419,
              "timestamp": "2025-09-02T18:51:23.435Z",
              "gasUsed": 1568762
            },
            {
              "name": "Create SEAS campaign",
              "description": "Create SEAS token-based campaign using createERC20Campaign",
              "status": "passed",
              "executionTime": 4453,
              "timestamp": "2025-09-02T18:51:26.859Z",
              "gasUsed": 1548814
            },
            {
              "name": "Create CELO campaign",
              "description": "Create normal CELO-based campaign with project addition fees",
              "status": "testing",
              "executionTime": 0,
              "timestamp": "2025-09-02T19:21:00.172Z"
            },
            {
              "name": "Create CELO campaign",
              "description": "Create normal CELO-based campaign with project addition fees",
              "status": "testing",
              "executionTime": 0,
              "timestamp": "2025-09-02T19:21:57.677Z"
            },
            {
              "name": "Create CELO campaign",
              "description": "Create normal CELO-based campaign with project addition fees",
              "status": "passed",
              "executionTime": 4521,
              "timestamp": "2025-09-02T19:49:53.085Z",
              "gasUsed": 1722662
            },
            {
              "name": "Create SEAS campaign",
              "description": "Create SEAS token-based campaign using createERC20Campaign",
              "status": "passed",
              "executionTime": 4563,
              "timestamp": "2025-09-02T19:49:58.148Z",
              "gasUsed": 1600114
            },
            {
              "name": "Create CELO campaign",
              "description": "Create normal CELO-based campaign with project addition fees",
              "status": "passed",
              "executionTime": 5000,
              "timestamp": "2025-09-02T20:19:30.737Z",
              "gasUsed": 1722662
            },
            {
              "name": "Create SEAS campaign",
              "description": "Create SEAS token-based campaign using createERC20Campaign",
              "status": "passed",
              "executionTime": 3813,
              "timestamp": "2025-09-02T20:19:36.345Z",
              "gasUsed": 1600114
            }
          ],
          "lastTested": "2025-09-02T20:19:40.771Z",
          "coverage": 0
        }
      },
      "coverage": 0,
      "lastTested": "2025-09-02T20:19:40.771Z"
    },
    "voting": {
      "name": "VotingModule",
      "description": "Voting mechanisms and session management",
      "status": "partial",
      "functions": {
        "createVotingSession": {
          "status": "passed",
          "testCases": [
            {
              "name": "Create voting session",
              "description": "Create voting session for SEAS campaign",
              "status": "passed",
              "executionTime": 3719,
              "timestamp": "2025-09-02T18:46:43.372Z",
              "gasUsed": 177844
            },
            {
              "name": "Create voting session",
              "description": "Create voting session for SEAS campaign",
              "status": "passed",
              "executionTime": 4782,
              "timestamp": "2025-09-02T19:08:49.786Z",
              "gasUsed": 177844
            },
            {
              "name": "Create voting session",
              "description": "Create voting session for SEAS campaign",
              "status": "passed",
              "executionTime": 4855,
              "timestamp": "2025-09-02T19:17:34.404Z",
              "gasUsed": 177844
            },
            {
              "name": "Create voting session",
              "description": "Create voting session for SEAS campaign",
              "status": "passed",
              "executionTime": 5025,
              "timestamp": "2025-09-02T19:18:15.498Z",
              "gasUsed": 177844
            }
          ],
          "lastTested": "2025-09-02T19:18:20.528Z",
          "coverage": 0
        },
        "vote": {
          "status": "not_tested",
          "testCases": [],
          "lastTested": "",
          "coverage": 0
        },
        "withdrawVote": {
          "status": "not_tested",
          "testCases": [],
          "lastTested": "",
          "coverage": 0
        },
        "getVotingSession": {
          "status": "not_tested",
          "testCases": [],
          "lastTested": "",
          "coverage": 0
        },
        "getVoteCount": {
          "status": "not_tested",
          "testCases": [],
          "lastTested": "",
          "coverage": 0
        },
        "getVotingPower": {
          "status": "not_tested",
          "testCases": [],
          "lastTested": "",
          "coverage": 0
        },
        "endVotingSession": {
          "status": "not_tested",
          "testCases": [],
          "lastTested": "",
          "coverage": 0
        },
        "calculateResults": {
          "status": "not_tested",
          "testCases": [],
          "lastTested": "",
          "coverage": 0
        }
      },
      "coverage": 13,
      "lastTested": "2025-09-02T19:18:20.529Z"
    },
    "treasury": {
      "name": "TreasuryModule",
      "description": "Fund management and distribution",
      "status": "not_tested",
      "functions": {
        "depositFunds": {
          "status": "not_tested",
          "testCases": [],
          "lastTested": "",
          "coverage": 0
        },
        "withdrawFunds": {
          "status": "not_tested",
          "testCases": [],
          "lastTested": "",
          "coverage": 0
        },
        "distributeFunds": {
          "status": "not_tested",
          "testCases": [],
          "lastTested": "",
          "coverage": 0
        },
        "getBalance": {
          "status": "not_tested",
          "testCases": [],
          "lastTested": "",
          "coverage": 0
        },
        "getTransactionHistory": {
          "status": "not_tested",
          "testCases": [],
          "lastTested": "",
          "coverage": 0
        }
      },
      "coverage": 0,
      "lastTested": ""
    },
    "pools": {
      "name": "PoolsModule",
      "description": "Liquidity pools and staking",
      "status": "not_tested",
      "functions": {
        "createPool": {
          "status": "not_tested",
          "testCases": [],
          "lastTested": "",
          "coverage": 0
        },
        "addLiquidity": {
          "status": "not_tested",
          "testCases": [],
          "lastTested": "",
          "coverage": 0
        },
        "removeLiquidity": {
          "status": "not_tested",
          "testCases": [],
          "lastTested": "",
          "coverage": 0
        },
        "getPoolInfo": {
          "status": "not_tested",
          "testCases": [],
          "lastTested": "",
          "coverage": 0
        },
        "stakeTokens": {
          "status": "not_tested",
          "testCases": [],
          "lastTested": "",
          "coverage": 0
        },
        "unstakeTokens": {
          "status": "not_tested",
          "testCases": [],
          "lastTested": "",
          "coverage": 0
        }
      },
      "coverage": 0,
      "lastTested": ""
    },
    "migration": {
      "name": "MigrationModule",
      "description": "V4 to V5 migration support",
      "status": "not_tested",
      "functions": {
        "migrateProject": {
          "status": "not_tested",
          "testCases": [],
          "lastTested": "",
          "coverage": 0
        },
        "migrateCampaign": {
          "status": "not_tested",
          "testCases": [],
          "lastTested": "",
          "coverage": 0
        },
        "migrateUserData": {
          "status": "not_tested",
          "testCases": [],
          "lastTested": "",
          "coverage": 0
        },
        "getMigrationStatus": {
          "status": "not_tested",
          "testCases": [],
          "lastTested": "",
          "coverage": 0
        },
        "rollbackMigration": {
          "status": "not_tested",
          "testCases": [],
          "lastTested": "",
          "coverage": 0
        }
      },
      "coverage": 0,
      "lastTested": ""
    }
  },
  "testScenarios": {
    "basicFunctionality": {
      "status": "not_tested",
      "description": "Basic module registration and function calls",
      "testCases": [],
      "lastTested": ""
    },
    "projectLifecycle": {
      "status": "not_tested",
      "description": "Complete project creation to completion flow",
      "testCases": [],
      "lastTested": ""
    },
    "campaignVoting": {
      "status": "not_tested",
      "description": "Campaign creation, voting, and fund distribution",
      "testCases": [],
      "lastTested": ""
    },
    "multiTokenSupport": {
      "status": "not_tested",
      "description": "ERC20 token integration and voting",
      "testCases": [],
      "lastTested": ""
    },
    "accessControl": {
      "status": "not_tested",
      "description": "Role-based access control testing",
      "testCases": [],
      "lastTested": ""
    },
    "upgradeability": {
      "status": "not_tested",
      "description": "Module upgrade and proxy functionality",
      "testCases": [],
      "lastTested": ""
    },
    "emergencyFunctions": {
      "status": "not_tested",
      "description": "Pause, unpause, and emergency controls",
      "testCases": [],
      "lastTested": ""
    },
    "gasOptimization": {
      "status": "not_tested",
      "description": "Gas usage optimization and limits",
      "testCases": [],
      "lastTested": ""
    },
    "edgeCases": {
      "status": "not_tested",
      "description": "Boundary conditions and error handling",
      "testCases": [],
      "lastTested": ""
    },
    "integration": {
      "status": "not_tested",
      "description": "Cross-module integration and communication",
      "testCases": [],
      "lastTested": ""
    },
    "seasDistribution": {
      "status": "failed",
      "description": "seasDistribution",
      "testCases": [
        {
          "name": "SEAS Token Distribution",
          "description": "Mint SEAS tokens using deployer wallet and distribute to test wallets",
          "status": "passed",
          "executionTime": 10389,
          "timestamp": "2025-09-02T18:41:16.271Z"
        },
        {
          "name": "SEAS Token Distribution",
          "description": "Mint SEAS tokens using deployer wallet and distribute to test wallets",
          "status": "passed",
          "executionTime": 8584,
          "timestamp": "2025-09-02T18:50:32.799Z"
        },
        {
          "name": "SEAS Token Distribution",
          "description": "Mint SEAS tokens using deployer wallet and distribute to test wallets",
          "status": "passed",
          "executionTime": 10117,
          "timestamp": "2025-09-02T19:20:40.513Z"
        },
        {
          "name": "SEAS Token Distribution",
          "description": "Mint SEAS tokens using deployer wallet and distribute to test wallets",
          "status": "failed",
          "executionTime": 0,
          "timestamp": "2025-09-02T19:47:45.337Z",
          "error": "SEAS token not found in deployment"
        },
        {
          "name": "SEAS Token Distribution",
          "description": "Mint SEAS tokens using deployer wallet and distribute to test wallets",
          "status": "passed",
          "executionTime": 9720,
          "timestamp": "2025-09-02T19:48:52.228Z"
        },
        {
          "name": "SEAS Token Distribution",
          "description": "Mint SEAS tokens using deployer wallet and distribute to test wallets",
          "status": "failed",
          "executionTime": 0,
          "timestamp": "2025-09-02T20:17:32.055Z",
          "error": "SEAS token not found in deployment"
        },
        {
          "name": "SEAS Token Distribution",
          "description": "Mint SEAS tokens using deployer wallet and distribute to test wallets",
          "status": "passed",
          "executionTime": 9585,
          "timestamp": "2025-09-02T20:18:32.470Z"
        }
      ],
      "lastTested": "2025-09-02T20:18:38.722Z"
    },
    "seasVotingEnablement": {
      "status": "failed",
      "description": "seasVotingEnablement",
      "testCases": [
        {
          "name": "SEAS Token Voting Enablement",
          "description": "Enable SEAS token for voting in VotingModule using deployer wallet",
          "status": "failed",
          "executionTime": 0,
          "timestamp": "2025-09-02T18:41:23.280Z",
          "error": "The contract function \"addSupportedToken\" reverted with the following reason:\nTreasuryModule: Token already supported\n\nContract Call:\n  address:   0xd3F55FE406312844f54b8eEDf7175f12cB650237\n  function:  addSupportedToken(address _token)\n  args:                       (0x4dC22da89824f08AeC7e49540A4e430aCDf6F579)\n  sender:    0x53eaF4CD171842d8144e45211308e5D90B4b0088\n\nDocs: https://viem.sh/docs/contract/writeContract\nVersion: viem@2.30.0"
        },
        {
          "name": "SEAS Token Voting Enablement",
          "description": "Enable SEAS token for voting in VotingModule using deployer wallet",
          "status": "passed",
          "executionTime": 12669,
          "timestamp": "2025-09-02T18:43:54.823Z"
        },
        {
          "name": "SEAS Token Voting Enablement",
          "description": "Enable SEAS token for voting in VotingModule using deployer wallet",
          "status": "passed",
          "executionTime": 17314,
          "timestamp": "2025-09-02T18:50:38.602Z"
        },
        {
          "name": "SEAS Token Voting Enablement",
          "description": "Enable SEAS token for voting in VotingModule using deployer wallet",
          "status": "passed",
          "executionTime": 19144,
          "timestamp": "2025-09-02T19:20:47.096Z"
        },
        {
          "name": "SEAS Token Voting Enablement",
          "description": "Enable SEAS token for voting in VotingModule using deployer wallet",
          "status": "passed",
          "executionTime": 22242,
          "timestamp": "2025-09-02T19:48:59.081Z"
        },
        {
          "name": "SEAS Token Voting Enablement",
          "description": "Enable SEAS token for voting in VotingModule using deployer wallet",
          "status": "passed",
          "executionTime": 21761,
          "timestamp": "2025-09-02T20:18:38.726Z"
        }
      ],
      "lastTested": "2025-09-02T20:18:50.898Z"
    },
    "projectCreation": {
      "status": "passed",
      "description": "projectCreation",
      "testCases": [
        {
          "name": "Project Creation",
          "description": "Create projects for each test wallet",
          "status": "passed",
          "executionTime": 49537,
          "timestamp": "2025-09-02T18:44:04.279Z"
        },
        {
          "name": "Project Creation",
          "description": "Create projects for each test wallet",
          "status": "passed",
          "executionTime": 53413,
          "timestamp": "2025-09-02T18:50:47.334Z"
        },
        {
          "name": "Project Creation",
          "description": "Create projects for each test wallet",
          "status": "passed",
          "executionTime": 63429,
          "timestamp": "2025-09-02T19:49:11.876Z"
        },
        {
          "name": "Project Creation",
          "description": "Create projects for each test wallet",
          "status": "passed",
          "executionTime": 61268,
          "timestamp": "2025-09-02T20:18:51.173Z"
        }
      ],
      "lastTested": "2025-09-02T20:19:30.405Z"
    },
    "campaignCreation": {
      "status": "partial",
      "description": "campaignCreation",
      "testCases": [
        {
          "name": "Campaign Creation",
          "description": "Create both CELO and SEAS token-based campaigns",
          "status": "passed",
          "executionTime": 57457,
          "timestamp": "2025-09-02T18:44:41.145Z"
        },
        {
          "name": "Campaign Creation",
          "description": "Create both CELO and SEAS token-based campaigns",
          "status": "passed",
          "executionTime": 61303,
          "timestamp": "2025-09-02T18:51:23.432Z"
        },
        {
          "name": "Campaign Creation",
          "description": "Create both CELO and SEAS token-based campaigns",
          "status": "testing",
          "executionTime": 0,
          "timestamp": "2025-09-02T19:21:00.170Z"
        },
        {
          "name": "Campaign Creation",
          "description": "Create both CELO and SEAS token-based campaigns",
          "status": "testing",
          "executionTime": 0,
          "timestamp": "2025-09-02T19:21:57.526Z"
        },
        {
          "name": "Campaign Creation",
          "description": "Create both CELO and SEAS token-based campaigns",
          "status": "passed",
          "executionTime": 73904,
          "timestamp": "2025-09-02T19:49:53.074Z"
        },
        {
          "name": "Campaign Creation",
          "description": "Create both CELO and SEAS token-based campaigns",
          "status": "passed",
          "executionTime": 71645,
          "timestamp": "2025-09-02T20:19:30.731Z"
        }
      ],
      "lastTested": "2025-09-02T20:19:40.783Z"
    },
    "projectAdditionToSeas": {
      "status": "failed",
      "description": "projectAdditionToSeas",
      "testCases": [
        {
          "name": "Project Addition to SEAS Campaign",
          "description": "Add projects to SEAS campaign and test SEAS token voting",
          "status": "passed",
          "executionTime": 63939,
          "timestamp": "2025-09-02T18:44:49.068Z"
        },
        {
          "name": "Project Addition to SEAS Campaign",
          "description": "Add projects to SEAS campaign and test SEAS token voting",
          "status": "testing",
          "executionTime": 0,
          "timestamp": "2025-09-02T18:51:31.322Z"
        },
        {
          "name": "Project Addition to SEAS Campaign",
          "description": "Add projects to SEAS campaign and test SEAS token voting",
          "status": "passed",
          "executionTime": 34295,
          "timestamp": "2025-09-02T19:07:54.353Z"
        },
        {
          "name": "Project Addition to SEAS Campaign",
          "description": "Add projects to SEAS campaign and test SEAS token voting",
          "status": "failed",
          "executionTime": 0,
          "timestamp": "2025-09-02T19:27:14.265Z",
          "error": "❌ SEAS campaign not found in state."
        },
        {
          "name": "Project Addition to SEAS Campaign",
          "description": "Add projects to SEAS campaign and test SEAS token voting",
          "status": "passed",
          "executionTime": 100887,
          "timestamp": "2025-09-02T19:50:03.269Z"
        },
        {
          "name": "Project Addition to SEAS Campaign",
          "description": "Add projects to SEAS campaign and test SEAS token voting",
          "status": "passed",
          "executionTime": 95868,
          "timestamp": "2025-09-02T20:19:40.791Z"
        }
      ],
      "lastTested": "2025-09-02T20:20:05.005Z"
    },
    "tokenWeightConversion": {
      "status": "testing",
      "description": "tokenWeightConversion",
      "testCases": [
        {
          "name": "Token Weight and Conversion System",
          "description": "Test new token weight and conversion features",
          "status": "testing",
          "executionTime": 0,
          "timestamp": "2025-09-02T18:44:55.548Z"
        },
        {
          "name": "Token Weight and Conversion System",
          "description": "Test new token weight and conversion features",
          "status": "passed",
          "executionTime": 30383,
          "timestamp": "2025-09-02T18:46:16.410Z"
        },
        {
          "name": "Token Weight and Conversion System",
          "description": "Test new token weight and conversion features",
          "status": "passed",
          "executionTime": 58887,
          "timestamp": "2025-09-02T19:08:25.184Z"
        },
        {
          "name": "Token Weight and Conversion System",
          "description": "Test new token weight and conversion features",
          "status": "failed",
          "executionTime": 0,
          "timestamp": "2025-09-02T19:50:30.247Z",
          "error": "The contract function \"updateCampaignTokenWeight\" reverted with the following reason:\nCampaignsModule: Token not allowed in campaign\n\nContract Call:\n  address:   0xE73F2Db4adA1E3E09d605A61c1522AeCb461Aa4E\n  function:  updateCampaignTokenWeight(uint256 _campaignId, address _token, uint256 _newWeight)\n  args:                               (1, 0x4dC22da89824f08AeC7e49540A4e430aCDf6F579, 5000000000000000)\n  sender:    0x53eaF4CD171842d8144e45211308e5D90B4b0088\n\nDocs: https://viem.sh/docs/contract/writeContract\nVersion: viem@2.30.0"
        },
        {
          "name": "Token Weight and Conversion System",
          "description": "Test new token weight and conversion features",
          "status": "testing",
          "executionTime": 0,
          "timestamp": "2025-09-02T20:20:05.008Z"
        }
      ],
      "lastTested": "2025-09-02T19:50:37.160Z"
    },
    "votingAndDistribution": {
      "status": "testing",
      "description": "votingAndDistribution",
      "testCases": [
        {
          "name": "Voting and Distribution",
          "description": "Test voting mechanisms and fund distribution",
          "status": "testing",
          "executionTime": 0,
          "timestamp": "2025-09-02T18:46:43.362Z"
        },
        {
          "name": "Voting and Distribution",
          "description": "Test voting mechanisms and fund distribution",
          "status": "testing",
          "executionTime": 0,
          "timestamp": "2025-09-02T19:08:49.776Z"
        },
        {
          "name": "Voting and Distribution",
          "description": "Test voting mechanisms and fund distribution",
          "status": "testing",
          "executionTime": 0,
          "timestamp": "2025-09-02T19:17:34.262Z"
        },
        {
          "name": "Voting and Distribution",
          "description": "Test voting mechanisms and fund distribution",
          "status": "testing",
          "executionTime": 0,
          "timestamp": "2025-09-02T19:18:15.328Z"
        }
      ],
      "lastTested": "2025-09-02T18:46:43.362Z"
    }
  },
  "testResults": {
    "totalTests": 0,
    "passedTests": 0,
    "failedTests": 0,
    "skippedTests": 0,
    "coverage": 0,
    "lastRun": "",
    "executionTime": 0,
    "gasUsage": {
      "total": 0,
      "average": 0,
      "max": 0,
      "min": 0
    }
  },
  "deployment": {
    "network": "alfajores",
    "contracts": {
      "projectsModule": "0xA1e6227138Bf38f8F997eE4512D83f4FE65f9D3A",
      "campaignsModule": "0xD7Ef031632CeF8361625e7e55cef80b3cebbF4cB",
      "votingModule": "0x5c7987658544B90F3E8193ABB9c5F0E0b39a4c87",
      "treasuryModule": "0x9462be941327d74F5eeeFf6803CbeD7f10493168",
      "poolsModule": "0x22aBDbF0F8FFa68ef45318450cD1856CF7AA5c8d",
      "migrationModule": "0x686C1c7ad48b5f9DE9b03F5a341fb91106C65436",
      "sovereignSeasV5": "0xB837E7Ff9618280462D5f0eFaB2C1abc95C31d1A",
      "seasToken": "0x4dC22da89824f08AeC7e49540A4e430aCDf6F579"
    },
    "lastDeployed": "2025-09-02T20:18:29.141Z",
    "deploymentHash": "deployment-hash-placeholder"
  },
  "notes": {
    "knownIssues": [],
    "improvements": [],
    "nextSteps": [
      "Start with basic functionality tests",
      "Test module registration and initialization",
      "Test project creation workflow",
      "Test campaign creation and management",
      "Test voting mechanisms",
      "Test treasury operations",
      "Test integration between modules"
    ]
  }
}