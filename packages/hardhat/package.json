{
  "name": "@sovereign-seas/hardhat",
  "license": "MIT",
  "version": "1.0.0",
  "devDependencies": {
    "@nomicfoundation/hardhat-chai-matchers": "^2.0.0",
    "@nomicfoundation/hardhat-ethers": "^3.0.0",
    "@nomicfoundation/hardhat-ignition": "^0.15.5",
    "@nomicfoundation/hardhat-ignition-ethers": "^0.15.0",
    "@nomicfoundation/hardhat-network-helpers": "^1.0.11",
    "@nomicfoundation/hardhat-toolbox": "^5.0.0",
    "@nomicfoundation/hardhat-verify": "^2.0.11",
    "@nomicfoundation/ignition-core": "^0.15.5",
    "@nomiclabs/hardhat-ethers": "^2.2.3",
    "@typechain/ethers-v6": "^0.5.0",
    "@typechain/hardhat": "^9.1.0",
    "@types/chai": "^4.3.16",
    "@types/mocha": "^10.0.7",
    "@types/node": "^22.15.21",
    "chai": "^4.2.0",
    "chain": "^0.4.0",
    "hardhat": "^2.22.15",
    "hardhat-gas-reporter": "^1.0.8",
    "solidity-coverage": "^0.8.1",
    "ts-node": "^10.9.2",
    "typechain": "^8.3.2",
    "typescript": "^5.5.3"
  },
  "dependencies": {
    "@openzeppelin/contracts": "^5.3.0",
    "dotenv": "^16.4.5",
    "ethers": "^6.14.4",
    "viem": "^2.30.0"
  },
  "scripts": {
    "postinstall": "chmod +x sync-abis.js",
    "compile": "hardhat compile && node sync-abis.js",
    "tsc": "npx tsc -p . && cp typechain/*.d.ts dist/typechain/",
    "build": "yarn compile && yarn tsc",
    "mint": "pnpm hardhat run scripts/mint.ts --network alfajores",
    "deployseas": "hardhat run scripts/deploy/deploySov.ts ",
    "deploygrants": "hardhat run scripts/deploy/deploySovGrants.ts ",
    "deployclaims": "ts-node scripts/deploy/deployclaims.ts ",
    "deploytips": "hardhat run scripts/deploy/deplottips.ts ",
    "deploynft": "ts-node scripts/deploy/deployNFT.ts",
    "deploynft:celo": "ts-node scripts/deploy/deployNFT.ts --network celo",
    "deploytips:celo": "ts-node scripts/deploy/deplottips.ts --network celo",
    "deploytips:alfajores": "ts-node scripts/deploy/deplottips.ts --network alfajores",
    "deploytips:sepolia": "ts-node scripts/deploy/deplottips.ts --network sepolia",
    "deploytips:base": "ts-node scripts/deploy/deplottips.ts --network base",
    "deploytips:base-sepolia": "ts-node scripts/deploy/deplottips.ts --network base-sepolia",
    "withdraw": "pnpm hardhat run scripts/withdraw.ts --network celo",
    "verify": "hardhat verify",
    "verify:seas": "hardhat run scripts/deploy/verifySov.ts --network alfajores",
    "verify:grants": "hardhat run scripts/deploy/verifyGrants.ts --network celo",
    "verify:nft": "hardhat run scripts/deploy/verifyNFT.ts --network celo",
    "verify:nft:celo": "hardhat run scripts/deploy/verifyNFT.ts --network celo",
    "vote": "hardhat run scripts/swapVote.ts ",
    "verifyclaims": "hardhat run scripts/deploy/verifyClaims.ts --network alfajores",
    "verifyclaims:celo": "hardhat run scripts/deploy/verifyClaims.ts --network celo",
    "viewProjects": "hardhat run scripts/viewProjects.ts",
    "viewCampaign": "hardhat run scripts/viewCampaign.ts",
    "createCampaign": "hardhat run scripts/createCampaign.ts",
    "endCampaign": "hardhat run scripts/endCampaigns.ts",
    "getCampaign": "npx ts-node scripts/getCampaign.ts",
    "showVotes": "npx ts-node scripts/showVotes.ts",
    "addSupportedToken": "hardhat run scripts/addSupportedToken.ts",
    "add-tokens": "npx ts-node scripts/addSupportedToken.ts",
    "add-providers": "npx ts-node scripts/addExchangeProviders.ts",
    "add-sample": "npx ts-node scripts/generateSampleData.ts",
    "add-custom-sample": "npx ts-node scripts/generateCustomSampleData.ts",
    "updateWinners": "npx ts-node scripts/updateCampaignWinners.ts",
    "claimVote": "npx ts-node scripts/testclaimVote.ts",
    "getVoteConversion": "npx ts-node scripts/getVoteConversion.ts",
    "clean": "hardhat clean",
    "run:node": "hardhat node",
    "test": "hardhat test",
    "testnft": "hardhat run scripts/testNFT.ts --network celo",
    "prettier": "prettier --write 'contracts/**/*.sol' '**/*.ts'",
    "sync:abis": "node sync-abis.js",
    "deploy:test": "ts-node scripts/deploy/deployNFT.ts --network alfajores",
    "verify:test": "hardhat run scripts/deploy/verifyNFT.ts --network alfajores",
    "deploy:uniswap-proxy": "ts-node scripts/deploy/deployUniswapVotingProxy.ts --network alfajores",
    "deploy:uniswap-proxy:celo": "ts-node scripts/deploy/deployUniswapVotingProxy.ts --network celo",
    "verify:uniswap-proxy": "ts-node scripts/deploy/verifyUniswapVotingProxy.ts --network alfajores",
    "verify:uniswap-proxy:celo": "ts-node scripts/deploy/verifyUniswapVotingProxy.ts --network celo",
    "test:uniswap-proxy": "ts-node scripts/testUniswapVotingProxy.ts --network alfajores",
    "test:uniswap-proxy:celo": "ts-node scripts/testUniswapVotingProxy.ts --network celo",
    "deploy:uniswap-v3-proxy": "ts-node scripts/deploy/deployUniswapV3VotingProxy.ts --network alfajores",
    "deploy:uniswap-v3-proxy:celo": "ts-node scripts/deploy/deployUniswapV3VotingProxy.ts --network celo",
    "verify:uniswap-v3-proxy": "ts-node scripts/deploy/verifyUniswapV3VotingProxy.ts --network alfajores",
    "verify:uniswap-v3-proxy:celo": "ts-node scripts/deploy/verifyUniswapV3VotingProxy.ts",
    "test:uniswap-v3-proxy": "ts-node scripts/testUniswapV3VotingProxy.ts --network alfajores",
    "test:uniswap-v3-proxy:celo": "ts-node scripts/testUniswapV3VotingProxy.ts --network celo",
    "deploy:uniswap-v2-proxy": "ts-node scripts/deploy/deployUniswapV2VotingProxy.ts --network alfajores",
    "deploy:uniswap-v2-proxy:celo": "ts-node scripts/deploy/deployUniswapV2VotingProxy.ts --network celo",
    "verify:uniswap-v2-proxy": "ts-node scripts/deploy/verifyUniswapV2VotingProxy.ts --network alfajores",
    "verify:uniswap-v2-proxy:celo": "ts-node scripts/deploy/verifyUniswapV2VotingProxy.ts --network celo",
    "deploy:uniswap-factory": "ts-node scripts/deploy/deployUniswapFactory.ts --network alfajores",
    "deploy:uniswap-factory:celo": "ts-node scripts/deploy/deployUniswapFactory.ts --network celo",
    "verify:uniswap-factory": "ts-node scripts/deploy/verifyUniswapFactory.ts --network alfajores",
    "verify:uniswap-factory:celo": "ts-node scripts/deploy/verifyUniswapFactory.ts --network celo",
    "deploy:all-uniswap": "npm run deploy:uniswap-v3-proxy && npm run deploy:uniswap-v2-proxy && npm run deploy:uniswap-factory",
    "deploy:all-uniswap:celo": "npm run deploy:uniswap-v3-proxy:celo && npm run deploy:uniswap-v2-proxy:celo && npm run deploy:uniswap-factory:celo",
    "verify:all-uniswap": "npm run verify:uniswap-v3-proxy && npm run verify:uniswap-v2-proxy && npm run verify:uniswap-factory",
    "verify:all-uniswap:celo": "npm run verify:uniswap-v3-proxy:celo && npm run verify:uniswap-v2-proxy:celo && npm run verify:uniswap-factory:celo",
    "deploy:ubeswap-proxy": "ts-node scripts/deploy/deployUbeswapVotingProxy.ts --network alfajores",
    "deploy:ubeswap-proxy:celo": "ts-node scripts/deploy/deployUbeswapVotingProxy.ts --network celo",
    "verify:ubeswap-proxy": "ts-node scripts/deploy/verifyUbeswapVotingProxy.ts --network alfajores",
    "verify:ubeswap-proxy:celo": "ts-node scripts/deploy/verifyUbeswapVotingProxy.ts --network celo",
    "deploy:uniproxyV2:celo": "ts-node scripts/deploy/deployEnhancedCeloVotingProxy.ts --network celo",
    "verify:uniproxyV2:celo": "ts-node scripts/deploy/verifyEnhancedCeloVotingProxy.ts --network celo",
    "test:vote": "ts-node scripts/testVoteWithToken.ts  --transpileOnly --network celo",
    "test:vote:loose": "ts-node --transpileOnly scripts/testVoteWithToken.ts --network celo",
    "deploy:good-dollar-voter": "ts-node scripts/deploy/deploy-good-dollar-voter.ts",
    "verify:good-dollar-voter": "ts-node scripts/deploy/verify-good-dollar-voter.ts",
    "test:good-dollar-voter": "ts-node --transpileOnly scripts/deploy/test-good-dollar-voter.ts",
    "deploy:sovseasvote:celo": "ts-node scripts/deploy/deploySovereignVotingGateway.ts --network celo",
    "verify:sovseasvote:celo": "ts-node scripts/deploy/verifySovereignVotingGateway.ts --network celo",
    "deploy:wproxy:celo": "ts-node scripts/deploy/deploy-working-proxy.ts --network celo",
    "verify:wproxy:celo": "ts-node scripts/deploy/verify-enhanced-celo-voting-proxy --network celo",
    "deploy:tips:celo": "ts-node scripts/deploy/deploy-tips.ts --network celo",
    "verify:tips:celo": "ts-node scripts/deploy/verify-tips.ts --network celo",
    "test:ubeswap-proxy": "ts-node scripts/testUbeswapVotingProxy.ts --network alfajores",
    "test:ubeswap-proxy:celo": "ts-node scripts/testUbeswapVotingProxy.ts --network celo",
    "check:celo-addresses": "ts-node scripts/checkCeloAddresses.ts",
    "test:swap:loose": "ts-node --transpileOnly tests/testSwap.ts",
    "transpile": "npx tsc -p .",
    "transpile:watch": "npx tsc -p . --watch",
    "build:full": "yarn compile && yarn transpile"
  },
  "author": "olisehgenesis",
  "packageManager": "pnpm@10.11.0+sha512.6540583f41cc5f628eb3d9773ecee802f4f9ef9923cc45b69890fb47991d4b092964694ec3a4f738a420c918a333062c8b925d312f42e4f0c263eb603551f977"
}
